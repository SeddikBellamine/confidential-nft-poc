{"version":3,"sources":["components/Account.jsx","constants.js","hooks/LookupAddress.js","hooks/LocalStorage.js","components/Address.jsx","components/Blockie.jsx","components/AddressInput.jsx","components/EtherInput.jsx","components/Balance.jsx","helpers/Transactor.js","components/Wallet.jsx","components/Faucet.jsx","components/DragandDrop.jsx","views/Home.jsx","App.jsx","index.jsx","services/ipfs-service.js"],"names":["Account","address","web3Modal","provider","price","minimized","loadWeb3Modal","logoutOfWeb3Modal","tabsValues","blockExplorer","value","label","useState","activeTab","setActiveTab","isLoggedIn","setIsLoggedIn","toggleLogin","userAddress","availableNetworks","currentNetwork","setCurrentNetwork","modalButtons","cachedProvider","push","Button","key","style","verticalAlign","marginLeft","marginTop","shape","size","onClick","NavBar","title","tabs","values","onSelect","login","onLoginClick","onLogoutClick","onAddressClick","alert","network","disabled","extraButtons","icon","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","cx","cy","r","d","x1","y1","x2","y2","INFURA_ID","NETWORK","chainId","n","NETWORKS","localhost","name","color","rpcUrl","window","location","hostname","mainnet","kovan","faucet","rinkeby","ropsten","goerli","xdai","gasPrice","matic","mumbai","iExecSidechain","lookupAddress","a","reportedName","resolveName","resolvedAddress","getAddress","useLookupAddress","ensName","setEnsName","initialValue","item","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","valueToStore","Function","setItem","stringify","useLocalStorage","ensCache","setEnsCache","useEffect","timestamp","Date","now","then","Text","Typography","Address","props","ens","ensProvider","avatar","paragraph","rows","displayAddress","substr","indexOf","text","etherscanLink","blockExplorerLink","target","href","rel","seed","toLowerCase","scale","onChange","editable","copyable","fontSize","paddingLeft","Blockie","AddressInput","setValue","scan","setScan","currentValue","scannerButton","cursor","count","CameraOutlined","QrcodeOutlined","updateAddress","useCallback","newValue","possibleAddress","scanner","zIndex","position","left","top","delay","resolution","onError","e","onScan","possibleNewValue","lastIndexOf","autoComplete","autoFocus","placeholder","prefix","addonAfter","EtherInput","mode","setMode","display","setDisplay","option","usdValue","parseFloat","toFixed","ethValue","Balance","dollarMode","setDollarMode","balance","setBalance","getBalance","newBalance","usePoller","pollTime","floatBalance","usingBalance","etherBalance","formatEther","displayBalance","dollarMultiplier","padding","Transactor","etherscan","tx","signer","getSigner","getNetwork","options","dappId","system","networkId","transactionHandler","txInformation","notify","Notify","etherscanNetwork","etherscanTxUrl","Promise","result","gasLimit","hexlify","sendTransaction","hash","emitter","on","transaction","onclick","open","notification","info","message","description","placement","Paragraph","Wallet","receiveButton","privateKeyButton","signerAddress","useUserAddress","selectedAddress","setOpen","qr","setQr","amount","setAmount","toAddress","setToAddress","pk","setPK","providerSend","WalletOutlined","rotate","level","includeMargin","renderAs","imageSettings","excavate","KeyOutlined","wallet","ethers","extraPkDisplayAdded","extraPkDisplay","backgroundStyle","pastpk","pastwallet","currentPrivateKey","privateKey","createRandom","_signingKey","reload","inputStyle","visible","float","paddingRight","onOk","onCancel","footer","type","loading","parseEther","to","SendOutlined","Faucet","blockie","setAddress","localProvider","suffix","baseStyle","flex","flexDirection","alignItems","borderWidth","borderRadius","borderColor","borderStyle","backgroundColor","outline","transition","focusedStyle","acceptStyle","rejectStyle","DragandDrop","useDropzone","acceptedFiles","getRootProps","getInputProps","isFocused","isDragAccept","isDragReject","files","map","file","path","parentCallback","useMemo","className","useStyles","makeStyles","container","paddingTop","input","maxWidth","divider","dividerlast","dividertee","deploydataset","pushtEncryptionkeytosms","publishteedatasetorder","orderbook","Home","readProvider","writeProvider","contracts","iexec","Key","setKey","Files","setFiles","encryptionKeyValue","setEncryptionValue","datasetNameValue","setDatasetNameValue","dataseturlipfsValue","setDataseturlipfsValue","datasetChecksumValue","setDatasetChecksumValue","datasetEncryptionKeyValue","setDatasetEncryptionKeyValue","datasetAddressValue","setDatasetAddressValue","handleDatasetAddressChange","datasetVolumeValue","setDatasetVolumeValue","datasetAppRestrictValue","setDatasetAppRestrictValue","datasetRequesterRestrictValue","setDatasetRequesterRestrictValue","datasetOrderHashValue","setDatasetOrderHashValue","TaskidValue","setTaskidValue","statusEncryptandUpload","setstatusEncryptandUpload","statusencryptuploadbutton","setstatusencryptuploadbutton","statusDeploytext","setdeploytext","statussecrettext","setsecrettext","statusDeploy","setstatusDeploy","runapplaoding","setrunapplaoding","disablestoragebutton","setdisablestoragebutton","storagetext","setstoragetext","appstatusdeal","setappstatusdeal","appstatus","setappstatus","deploydatasetref","useRef","pushtosmsref","teeref","ms","res","setTimeout","generateDatasetKey","dataset","generateEncryptionKey","encryptDataset","Error","resolve","reject","fileReader","FileReader","readAsArrayBuffer","onload","onerror","onabort","fileBytes","oldArray","encrypt","encrypted","computeEncryptedFileChecksum","checksum","add","cid","multiaddr","toString","publicUrl","fetch","ok","current","scrollIntoView","block","behavior","owner","deployDataset","pushsecret","pushDatasetSecret","publishOrder","volume","apprestrict","requesterrestrict","tag","order","createDatasetorder","datasetprice","signDatasetorder","signedOrder","publishDatasetorder","orderHash","cancelOrder","fetchDatasetorder","cancelDatasetorder","txHash","checkStorage","storage","checkStorageTokenExists","isStorageInitialized","initStorage","defaultStorageLogin","storageToken","pushStorageToken","forceUpdate","appRun","appAddress","datasetAddress","fetchAppOrderbook","minTag","appOrders","orders","appOrder","fetchDatasetOrderbook","requester","datasetOrders","datasetOrder","fetchWorkerpoolOrderbook","workerpool","app","workerpoolOrders","workerpoolOrder","createRequestorder","appmaxprice","appprice","datasetmaxprice","workerpoolmaxprice","workerpoolprice","params","category","requestOrderToSign","signRequestorder","requestOrder","matchOrders","apporder","datasetorder","requestorder","workerpoolorder","dealid","dealUrl","deal","show","tasks","dowloadResults","task","fetchResults","blob","fileName","navigator","msSaveOrOpenBlob","classes","InputText","FilesData","CircularProgress","status","index","id","ref","targetNetwork","Web3Modal","cacheProvider","providerOptions","clearCachedProvider","ethereum","App","setWriteProvider","setiexec","selectedChainId","_network","localChainId","networkDisplay","right","closable","ethProvider","_chainId","_accounts","request","method","chainName","nativeCurrency","symbol","decimals","rpcUrls","blockExplorerUrls","web3provider","Web3Provider","IExec","isNative","route","setRoute","pathname","faucetHint","faucetAvailable","connection","faucetClicked","setFaucetClicked","role","aria-label","textAlign","selectedKeys","Item","exact","bottom","align","gutter","span","ReactDOM","render","ThemeProvider","document","getElementById","get","ipfsGateway","arrayBuffer","Buffer","from","content","Ipfs","create","ipfs","pin","timeout","catch","stop"],"mappings":"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","file":"static/js/main.c44242c4.chunk.js","sourcesContent":["import React, {useState} from \"react\";\r\nimport NavBar from \"ui-kit/components/NavBar\";\r\nimport Button from \"ui-kit/components/Button\";\r\n\r\n/*\r\n  ~ What it does? ~\r\n\r\n  Displays an Address, Balance, and Wallet as one Account component,\r\n  also allows users to log in to existing accounts and log out\r\n\r\n  ~ How can I use? ~\r\n\r\n  <Account\r\n    address={address}\r\n    provider={provider}\r\n    provider={provider}\r\n    provider={provider}\r\n    price={price}\r\n    web3Modal={web3Modal}\r\n    loadWeb3Modal={loadWeb3Modal}\r\n    logoutOfWeb3Modal={logoutOfWeb3Modal}\r\n    blockExplorer={blockExplorer}\r\n  />\r\n\r\n  ~ Features ~\r\n\r\n  - Provide address={address} and get balance corresponding to the given address\r\n  - Provide provider={provider} to access balance on local network\r\n  - Provide provider={provider} to display a wallet\r\n  - Provide provider={provider} and your address will be replaced by ENS name\r\n              (ex. \"0xa870\" => \"user.eth\")\r\n  - Provide price={price} of ether and get your balance converted to dollars\r\n  - Provide web3Modal={web3Modal}, loadWeb3Modal={loadWeb3Modal}, logoutOfWeb3Modal={logoutOfWeb3Modal}\r\n              to be able to log in/log out to/from existing accounts\r\n  - Provide blockExplorer={blockExplorer}, click on address and get the link\r\n              (ex. by default \"https://etherscan.io/\" or for xdai \"https://blockscout.com/poa/xdai/\")\r\n*/\r\n\r\nexport default function Account({\r\n  address,\r\n  provider,\r\n  price,\r\n  minimized,\r\n  web3Modal,\r\n  loadWeb3Modal,\r\n  logoutOfWeb3Modal,\r\n  blockExplorer,\r\n}) {\r\n  const tabsValues = [\r\n    {\r\n      value: \"tab1\",\r\n      label: \"NFT Builder\",\r\n    },\r\n  ];\r\n\r\n\r\n  const [activeTab, setActiveTab] = useState(tabsValues[0].value);\r\n  const handleTabSelect = (value) => setActiveTab(value);\r\n\r\n  const [isLoggedIn, setIsLoggedIn] = useState(true);\r\n  const toggleLogin = () => {\r\n    loadWeb3Modal();\r\n    setIsLoggedIn(!isLoggedIn);\r\n  }\r\n  const userAddress = address;\r\n\r\n\r\n  const availableNetworks = [\r\n    {\r\n      value: \"1\",\r\n      label: \"iExec Sidechain testnet\",\r\n    }\r\n  ];\r\n  const [currentNetwork, setCurrentNetwork] = useState(\r\n    availableNetworks[0].value\r\n  );\r\n  const handleNetworkSelect = (value) => setCurrentNetwork(value);\r\n  const modalButtons = [];\r\n  if (web3Modal) {\r\n    if (web3Modal.cachedProvider) {\r\n      \r\n      modalButtons.push(\r\n        <Button\r\n          key=\"logoutbutton\"\r\n          style={{ verticalAlign: \"top\", marginLeft: 8, marginTop: 4 }}\r\n          shape=\"round\"\r\n          size=\"large\"\r\n          onClick={logoutOfWeb3Modal}\r\n        >\r\n          Logout\r\n        </Button>,\r\n      );\r\n    } else {\r\n      modalButtons.push(\r\n        <Button\r\n          key=\"loginbutton\"\r\n          style={{ verticalAlign: \"top\", marginLeft: 8, marginTop: 4 }}\r\n          shape=\"round\"\r\n          size=\"large\"\r\n          /*type={minimized ? \"default\" : \"primary\"}     too many people just defaulting to MM and having a bad time*/\r\n          onClick={loadWeb3Modal}\r\n        >\r\n          Connect\r\n        </Button>,\r\n      );\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      \r\n        <NavBar\r\n          title=\"Datahub\"\r\n          tabs={{\r\n            values: tabsValues,\r\n            value: activeTab,\r\n            onSelect: handleTabSelect,\r\n          }}\r\n          login={{\r\n            isLoggedIn,\r\n            onLoginClick: toggleLogin,\r\n            onLogoutClick: toggleLogin,\r\n            address: userAddress,\r\n            onAddressClick: () => alert(\"onAddressClick\"),\r\n          }}\r\n          network={{\r\n            values: availableNetworks,\r\n            value: currentNetwork,\r\n            onSelect: handleNetworkSelect,\r\n            disabled: isLoggedIn,\r\n          }}\r\n          extraButtons={[\r\n            {\r\n              icon: (\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  width=\"24\"\r\n                  height=\"24\"\r\n                  viewBox=\"0 0 24 24\"\r\n                  fill=\"none\"\r\n                  stroke=\"currentColor\"\r\n                  strokeWidth=\"2\"\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                >\r\n                  <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\r\n                  <path d=\"M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3\"></path>\r\n                  <line x1=\"12\" y1=\"17\" x2=\"12.01\" y2=\"17\"></line>\r\n                </svg>\r\n              ),\r\n              label: \"extra button\",\r\n              onClick: () => alert(\"clicked\"),\r\n            },\r\n          \r\n          ]}\r\n        />\r\n      \r\n      \r\n    </div>\r\n  );\r\n}\r\n","// MY INFURA_ID, SWAP IN YOURS FROM https://infura.io/dashboard/ethereum\r\nexport const INFURA_ID = \"47354c4ae0f24d918a987cd667da4f15\";\r\n\r\n//MY ETHERSCAN_ID, SWAP IN YOURS FROM https://etherscan.io/myapikey\r\nexport const ETHERSCAN_KEY = \"PSW8C433Q667DVEX5BCRMGNAH9FSGFZ7Q8\";\r\n\r\n//BLOCKNATIVE ID FOR Notify.js:\r\nexport const BLOCKNATIVE_DAPPID = \"0b58206a-f3c0-4701-a62f-73c7243e8c77\";\r\n\r\nexport const NETWORK = chainId => {\r\n  for (let n in NETWORKS) {\r\n    if (NETWORKS[n].chainId === chainId) {\r\n      return NETWORKS[n];\r\n    }\r\n  }\r\n};\r\n\r\n// \"Beeple EDM\" Dummy Prize NFT\r\nexport const SAMPLE_JSON_URI = \"https://api.jsonbin.io/b/6096ed6b8211bb127e382e89\";\r\n// Liens of new york\r\nexport const LIENS_OF_NEW_YORK_URI = \"https://api.jsonbin.io/b/608432b348f71c7a71cd4389/3\";\r\n\r\nexport const STARRY_NIGHT = \"https://api.jsonbin.io/b/6097eec87a19ef1245a63194\";\r\n\r\n// \"Golden Ticket\"; raffle owners can use their own ticket NFT template if they choose\"\r\n// Using \"Dice Roll\" for now\r\n\r\n\r\n\r\n// https://hardhat.org/metamask-issue.html\r\n// metamask assumes 1337 so you need to change its chain ID for local network\r\nexport const NETWORKS = {\r\n  localhost: {\r\n    name: \"localhost\",\r\n    color: \"#666666\",\r\n    chainId: 31337,\r\n    blockExplorer: \"\",\r\n    rpcUrl: \"http://\" + window.location.hostname + \":8545\",\r\n  },\r\n  mainnet: {\r\n    name: \"mainnet\",\r\n    color: \"#ff8b9e\",\r\n    chainId: 1,\r\n    rpcUrl: `https://mainnet.infura.io/v3/${INFURA_ID}`,\r\n    blockExplorer: \"https://etherscan.io/\",\r\n  },\r\n  kovan: {\r\n    name: \"kovan\",\r\n    color: \"#7003DD\",\r\n    chainId: 42,\r\n    rpcUrl: `https://kovan.infura.io/v3/${INFURA_ID}`,\r\n    blockExplorer: \"https://kovan.etherscan.io/\",\r\n    faucet: \"https://gitter.im/kovan-testnet/faucet\", //https://faucet.kovan.network/\r\n  },\r\n  rinkeby: {\r\n    name: \"rinkeby\",\r\n    color: \"#e0d068\",\r\n    chainId: 4,\r\n    rpcUrl: `https://rinkeby.infura.io/v3/${INFURA_ID}`,\r\n    faucet: \"https://faucet.rinkeby.io/\",\r\n    blockExplorer: \"https://rinkeby.etherscan.io/\",\r\n  },\r\n  ropsten: {\r\n    name: \"ropsten\",\r\n    color: \"#F60D09\",\r\n    chainId: 3,\r\n    faucet: \"https://faucet.ropsten.be/\",\r\n    blockExplorer: \"https://ropsten.etherscan.io/\",\r\n    rpcUrl: `https://ropsten.infura.io/v3/${INFURA_ID}`,\r\n  },\r\n  goerli: {\r\n    name: \"goerli\",\r\n    color: \"#0975F6\",\r\n    chainId: 5,\r\n    faucet: \"https://goerli-faucet.slock.it/\",\r\n    blockExplorer: \"https://goerli.etherscan.io/\",\r\n    rpcUrl: `https://goerli.infura.io/v3/${INFURA_ID}`,\r\n  },\r\n  xdai: {\r\n    name: \"xdai\",\r\n    color: \"#48a9a6\",\r\n    chainId: 100,\r\n    price: 1,\r\n    gasPrice: 1000000000,\r\n    rpcUrl: \"https://dai.poa.network\",\r\n    faucet: \"https://xdai-faucet.top/\",\r\n    blockExplorer: \"https://blockscout.com/poa/xdai/\",\r\n  },\r\n  matic: {\r\n    name: \"matic\",\r\n    color: \"#2bbdf7\",\r\n    chainId: 137,\r\n    price: 1,\r\n    gasPrice: 1000000000,\r\n    rpcUrl: \"https://rpc-mainnet.maticvigil.com\",\r\n    faucet: \"https://faucet.matic.network/\",\r\n    blockExplorer: \"https://explorer-mainnet.maticvigil.com//\",\r\n  },\r\n  mumbai: {\r\n    name: \"mumbai\",\r\n    color: \"#92D9FA\",\r\n    chainId: 80001,\r\n    price: 1,\r\n    gasPrice: 1000000000,\r\n    rpcUrl: \"https://rpc-mumbai.maticvigil.com\",\r\n    faucet: \"https://faucet.matic.network/\",\r\n    blockExplorer: \"https://mumbai-explorer.matic.today/\",\r\n  },\r\n  iExecSidechain: {\r\n    name: \"iExec Test Sidechain\",\r\n    color: \"#92D9FA\",\r\n    chainId: 133,\r\n    gasPrice: 0,\r\n    rpcUrl: \"https://viviani.iex.ec\",\r\n    faucet: \"https://faucet.iex.ec/viviani\",\r\n    blockExplorer: \"https://explorer.iex.ec/viviani/\",\r\n  },\r\n\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport { getAddress } from \"@ethersproject/address\";\r\nimport { useLocalStorage } from \".\"\r\n\r\n// resolved if(name){} to not save \"\" into cache \r\n\r\n/*\r\n  ~ What it does? ~\r\n\r\n  Gets ENS name from given address and provider\r\n\r\n  ~ How can I use? ~\r\n\r\n  const ensName = useLookupAddress(mainnetProvider, address);\r\n\r\n  ~ Features ~\r\n\r\n  - Provide address and get ENS name corresponding to given address\r\n*/\r\n\r\nconst lookupAddress = async (provider, address) => {\r\n  try {\r\n    // Accuracy of reverse resolution is not enforced.\r\n    // We then manually ensure that the reported ens name resolves to address\r\n    const reportedName = await provider.lookupAddress(address);\r\n    \r\n    const resolvedAddress = await provider.resolveName(reportedName);\r\n\r\n    if (getAddress(address) === getAddress(resolvedAddress)) {\r\n      return reportedName;\r\n    }\r\n  } catch (e) {\r\n    // Do nothing\r\n  }\r\n  return 0;\r\n};\r\n\r\nconst useLookupAddress = (provider, address) => {\r\n  const [ensName, setEnsName] = useState(address);\r\n  const [ensCache, setEnsCache] = useLocalStorage('ensCache_'+address);\r\n\r\n  useEffect(() => {\r\n    if( ensCache && ensCache.timestamp>Date.now()){\r\n      setEnsName(ensCache.name)\r\n    }else{\r\n      if (provider) {\r\n        lookupAddress(provider, address).then((name) => {\r\n          if (name) {\r\n            setEnsName(name);\r\n            setEnsCache({\r\n              timestamp:Date.now()+360000,\r\n              name:name\r\n            })\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }, [ensCache, provider, address, setEnsName, setEnsCache]);\r\n\r\n  return ensName;\r\n};\r\n\r\nexport default useLookupAddress;\r\n","import { useState } from 'react';\r\n// Hook from useHooks! (https://usehooks.com/useLocalStorage/)\r\nexport default function useLocalStorage(key, initialValue) {\r\n  // State to store our value\r\n  // Pass initial state function to useState so logic is only executed once\r\n  const [storedValue, setStoredValue] = useState(() => {\r\n    try {\r\n      // Get from local storage by key\r\n      const item = window.localStorage.getItem(key);\r\n      // Parse stored json or if none return initialValue\r\n      return item ? JSON.parse(item) : initialValue;\r\n    } catch (error) {\r\n      // If error also return initialValue\r\n      console.log(error);\r\n      return initialValue;\r\n    }\r\n  });\r\n\r\n  // Return a wrapped version of useState's setter function that ...\r\n  // ... persists the new value to localStorage.\r\n  const setValue = value => {\r\n    try {\r\n      // Allow value to be a function so we have same API as useState\r\n      const valueToStore =\r\n        value instanceof Function ? value(storedValue) : value;\r\n      // Save state\r\n      setStoredValue(valueToStore);\r\n      // Save to local storage\r\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n    } catch (error) {\r\n      // A more advanced implementation would handle the error case\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return [storedValue, setValue];\r\n}\r\n","import React from \"react\";\r\nimport Blockies from \"react-blockies\";\r\nimport { Typography, Skeleton } from \"antd\";\r\nimport { useLookupAddress } from \"../hooks\";\r\n\r\n\r\n// changed value={address} to address={address}\r\n\r\n/*\r\n  ~ What it does? ~\r\n\r\n  Displays an address with a blockie image and option to copy address\r\n\r\n  ~ How can I use? ~\r\n\r\n  <Address\r\n    address={address}\r\n    ensProvider={mainnetProvider}\r\n    blockExplorer={blockExplorer}\r\n    fontSize={fontSize}\r\n  />\r\n\r\n  ~ Features ~\r\n\r\n  - Provide ensProvider={mainnetProvider} and your address will be replaced by ENS name\r\n              (ex. \"0xa870\" => \"user.eth\")\r\n  - Provide blockExplorer={blockExplorer}, click on address and get the link\r\n              (ex. by default \"https://etherscan.io/\" or for xdai \"https://blockscout.com/poa/xdai/\")\r\n  - Provide fontSize={fontSize} to change the size of address text\r\n*/\r\n\r\nconst { Text } = Typography;\r\n\r\nconst blockExplorerLink = (address, blockExplorer) => `${blockExplorer || \"https://etherscan.io/\"}${\"address/\"}${address}`;\r\n\r\nexport default function Address(props) {\r\n\r\n  const address = props.value || props.address;\r\n\r\n  const ens = useLookupAddress(props.ensProvider, address);\r\n\r\n  \r\n\r\n  if (!address) {\r\n    return (\r\n      <span>\r\n        <Skeleton avatar paragraph={{ rows: 1 }} />\r\n      </span>\r\n    );\r\n  }\r\n\r\n  let displayAddress = address.substr(0, 6);\r\n\r\n  if (ens && ens.indexOf(\"0x\")<0) {\r\n    displayAddress = ens;\r\n  } else if (props.size === \"short\") {\r\n    displayAddress += \"...\" + address.substr(-4);\r\n  } else if (props.size === \"long\") {\r\n    displayAddress = address;\r\n  }\r\n\r\n  const etherscanLink = blockExplorerLink(address, props.blockExplorer);\r\n  if (props.minimized) {\r\n    return (\r\n      <span style={{ verticalAlign: \"middle\" }}>\r\n        <a target={\"_blank\"} href={etherscanLink} rel=\"noopener noreferrer\">\r\n          <Blockies seed={address.toLowerCase()} size={8} scale={2} />\r\n        </a>\r\n      </span>\r\n    );\r\n  }\r\n\r\n  let text;\r\n  if (props.onChange) {\r\n    text = (\r\n      <Text editable={{ onChange: props.onChange }} copyable={{ text: address }}>\r\n        <a  target={\"_blank\"} href={etherscanLink} rel=\"noopener noreferrer\">\r\n          {displayAddress}\r\n        </a>\r\n      </Text>\r\n    );\r\n  } else {\r\n    text = (\r\n      <Text copyable={{ text: address }}>\r\n        <a  target={\"_blank\"} href={etherscanLink} rel=\"noopener noreferrer\">\r\n          {displayAddress}\r\n        </a>\r\n      </Text>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <span>\r\n      <span style={{ verticalAlign: \"middle\" }}>\r\n        <Blockies seed={address.toLowerCase()} size={8} scale={props.fontSize?props.fontSize/7:4} />\r\n      </span>\r\n      <span style={{ verticalAlign: \"middle\", paddingLeft: 5, fontSize: props.fontSize?props.fontSize:28 }}>{text}</span>\r\n    </span>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Blockies from \"react-blockies\";\r\n\r\n// provides a blockie image for the address using \"react-blockies\" library\r\n\r\nexport default function Blockie(props) {\r\n  if (!props.address || typeof props.address.toLowerCase !== \"function\") {\r\n    return <span />;\r\n  }\r\n  // eslint-disable-next-line react/jsx-props-no-spreading\r\n  return <Blockies seed={props.address.toLowerCase()} {...props} />;\r\n}\r\n","import React, { useState, useCallback } from \"react\";\r\nimport QrReader from \"react-qr-reader\";\r\nimport { CameraOutlined, QrcodeOutlined } from \"@ant-design/icons\";\r\nimport { Input, Badge } from \"antd\";\r\nimport { useLookupAddress } from \"eth-hooks\";\r\nimport Blockie from \"./Blockie\";\r\n\r\n// probably we need to change value={toAddress} to address={toAddress}\r\n\r\n/*\r\n  ~ What it does? ~\r\n\r\n  Displays an address input with QR scan option\r\n\r\n  ~ How can I use? ~\r\n\r\n  <AddressInput\r\n    autoFocus\r\n    ensProvider={mainnetProvider}\r\n    placeholder=\"Enter address\"\r\n    value={toAddress}\r\n    onChange={setToAddress}\r\n  />\r\n\r\n  ~ Features ~\r\n\r\n  - Provide ensProvider={mainnetProvider} and your address will be replaced by ENS name\r\n              (ex. \"0xa870\" => \"user.eth\") or you can enter directly ENS name instead of address\r\n  - Provide placeholder=\"Enter address\" value for the input\r\n  - Value of the address input is stored in value={toAddress}\r\n  - Control input change by onChange={setToAddress} \r\n                          or onChange={address => { setToAddress(address);}}\r\n*/\r\n\r\nexport default function AddressInput(props) {\r\n  const [value, setValue] = useState(props.value);\r\n  const [scan, setScan] = useState(false);\r\n\r\n  const currentValue = typeof props.value !== \"undefined\" ? props.value : value;\r\n  const ens = useLookupAddress(props.ensProvider, currentValue);\r\n\r\n  const scannerButton = (\r\n    <div\r\n      style={{ marginTop: 4, cursor: \"pointer\" }}\r\n      onClick={() => {\r\n        setScan(!scan);\r\n      }}\r\n    >\r\n      <Badge count={<CameraOutlined style={{ fontSize: 9 }} />}>\r\n        <QrcodeOutlined style={{ fontSize: 18 }} />\r\n      </Badge>{\" \"}\r\n      Scan\r\n    </div>\r\n  );\r\n\r\n  const {ensProvider, onChange} = props;\r\n  const updateAddress = useCallback(\r\n    async newValue => {\r\n      if (typeof newValue !== \"undefined\") {\r\n        let address = newValue;\r\n        if (address.indexOf(\".eth\") > 0 || address.indexOf(\".xyz\") > 0) {\r\n          try {\r\n            const possibleAddress = await ensProvider.resolveName(address);\r\n            if (possibleAddress) {\r\n              address = possibleAddress;\r\n            }\r\n            // eslint-disable-next-line no-empty\r\n          } catch (e) {}\r\n        }\r\n        setValue(address);\r\n        if (typeof onChange === \"function\") {\r\n          onChange(address);\r\n        }\r\n      }\r\n    },\r\n    [ensProvider, onChange],\r\n  );\r\n\r\n  const scanner = scan ? (\r\n    <div\r\n      style={{\r\n        zIndex: 256,\r\n        position: \"absolute\",\r\n        left: 0,\r\n        top: 0,\r\n        width: \"100%\",\r\n      }}\r\n      onClick={() => {\r\n        setScan(false);\r\n      }}\r\n    >\r\n      <QrReader\r\n        delay={250}\r\n        resolution={1200}\r\n        onError={e => {\r\n          console.log(\"SCAN ERROR\", e);\r\n          setScan(false);\r\n        }}\r\n        onScan={newValue => {\r\n          if (newValue) {\r\n            console.log(\"SCAN VALUE\", newValue);\r\n            let possibleNewValue = newValue;\r\n            if (possibleNewValue.indexOf(\"/\") >= 0) {\r\n              possibleNewValue = possibleNewValue.substr(possibleNewValue.lastIndexOf(\"0x\"));\r\n              console.log(\"CLEANED VALUE\", possibleNewValue);\r\n            }\r\n            setScan(false);\r\n            updateAddress(possibleNewValue);\r\n          }\r\n        }}\r\n        style={{ width: \"100%\" }}\r\n      />\r\n    </div>\r\n  ) : (\r\n    \"\"\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      {scanner}\r\n      <Input\r\n        autoComplete=\"off\"\r\n        autoFocus={props.autoFocus}\r\n        placeholder={props.placeholder ? props.placeholder : \"address\"}\r\n        prefix={<Blockie address={currentValue} size={8} scale={3} />}\r\n        value={ens || currentValue}\r\n        addonAfter={scannerButton}\r\n        onChange={e => {\r\n          updateAddress(e.target.value);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Input } from \"antd\";\r\n\r\n// small change in useEffect, display currentValue if it's provided by user\r\n\r\n/*\r\n  ~ What it does? ~\r\n\r\n  Displays input field for ETH/USD amount, with an option to convert between ETH and USD\r\n\r\n  ~ How can I use? ~\r\n\r\n  <EtherInput\r\n    autofocus\r\n    price={price}\r\n    value=100\r\n    placeholder=\"Enter amount\"\r\n    onChange={value => {\r\n      setAmount(value);\r\n    }}\r\n  />\r\n\r\n  ~ Features ~\r\n\r\n  - Provide price={price} of ether and easily convert between USD and ETH\r\n  - Provide value={value} to specify initial amount of ether\r\n  - Provide placeholder=\"Enter amount\" value for the input\r\n  - Control input change by onChange={value => { setAmount(value);}}\r\n*/\r\n\r\nexport default function EtherInput(props) {\r\n  const [mode, setMode] = useState(props.price ? \"USD\" : \"ETH\");\r\n  const [display, setDisplay] = useState();\r\n  const [value, setValue] = useState();\r\n\r\n  const currentValue = typeof props.value !== \"undefined\" ? props.value : value;\r\n\r\n  const option = title => {\r\n    if (!props.price) return \"\";\r\n    return (\r\n      <div\r\n        style={{ cursor: \"pointer\" }}\r\n        onClick={() => {\r\n          if (mode === \"USD\") {\r\n            setMode(\"ETH\");\r\n            setDisplay(currentValue);\r\n          } else {\r\n            setMode(\"USD\");\r\n            if (currentValue) {\r\n              const usdValue = \"\" + (parseFloat(currentValue) * props.price).toFixed(2);\r\n              setDisplay(usdValue);\r\n            } else {\r\n              setDisplay(currentValue);\r\n            }\r\n          }\r\n        }}\r\n      >\r\n        {title}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  let prefix;\r\n  let addonAfter;\r\n  if (mode === \"USD\") {\r\n    prefix = \"$\";\r\n    addonAfter = option(\"USD 🔀\");\r\n  } else {\r\n    prefix = \"Ξ\";\r\n    addonAfter = option(\"ETH 🔀\");\r\n  }\r\n\r\n  useEffect(\r\n    ()=>{\r\n      if(!currentValue){\r\n        setDisplay(\"\");\r\n      }\r\n    }\r\n  ,[ currentValue ])\r\n\r\n  return (\r\n    <Input\r\n      placeholder={props.placeholder ? props.placeholder : \"amount in \" + mode}\r\n      autoFocus={props.autoFocus}\r\n      prefix={prefix}\r\n      value={display}\r\n      addonAfter={addonAfter}\r\n      onChange={async e => {\r\n        const newValue = e.target.value;\r\n        if (mode === \"USD\") {\r\n          const possibleNewValue = parseFloat(newValue)\r\n          if(possibleNewValue){\r\n            const ethValue = possibleNewValue / props.price;\r\n            setValue(ethValue);\r\n            if (typeof props.onChange === \"function\") {\r\n              props.onChange(ethValue);\r\n            }\r\n            setDisplay(newValue);\r\n          }else{\r\n            setDisplay(newValue);\r\n          }\r\n        } else {\r\n          setValue(newValue);\r\n          if (typeof props.onChange === \"function\") {\r\n            props.onChange(newValue);\r\n          }\r\n          setDisplay(newValue);\r\n        }\r\n      }}\r\n    />\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { formatEther } from \"@ethersproject/units\";\r\nimport { usePoller } from \"eth-hooks\";\r\n\r\n/*\r\n  ~ What it does? ~\r\n\r\n  Displays a balance of given address in ether & dollar\r\n\r\n  ~ How can I use? ~\r\n\r\n  <Balance\r\n    address={address}\r\n    provider={mainnetProvider}\r\n    price={price}\r\n  />\r\n\r\n  ~ If you already have the balance as a bignumber ~\r\n  <Balance\r\n    balance={balance}\r\n    price={price}\r\n  />\r\n\r\n  ~ Features ~\r\n\r\n  - Provide address={address} and get balance corresponding to given address\r\n  - Provide provider={mainnetProvider} to access balance on mainnet or any other network (ex. localProvider)\r\n  - Provide price={price} of ether and get your balance converted to dollars\r\n*/\r\n\r\n\r\nexport default function Balance(props) {\r\n  const [dollarMode, setDollarMode] = useState(true);\r\n  const [balance, setBalance] = useState();\r\n\r\n  const getBalance = async () => {\r\n    if (props.address && props.provider) {\r\n      try {\r\n        const newBalance = await props.provider.getBalance(props.address);\r\n        setBalance(newBalance);\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    }\r\n  };\r\n\r\n  usePoller(\r\n    () => {\r\n      getBalance();\r\n    },\r\n    props.pollTime ? props.pollTime : 11999,\r\n  );\r\n\r\n  let floatBalance = parseFloat(\"0.00\");\r\n\r\n  let usingBalance = balance;\r\n\r\n  if (typeof props.balance !== \"undefined\") {\r\n    usingBalance = props.balance;\r\n  }\r\n  if (typeof props.value !== \"undefined\") {\r\n    usingBalance = props.value;\r\n  }\r\n\r\n  if (usingBalance) {\r\n    const etherBalance = formatEther(usingBalance);\r\n    parseFloat(etherBalance).toFixed(2);\r\n    floatBalance = parseFloat(etherBalance);\r\n  }\r\n\r\n  let displayBalance = floatBalance.toFixed(4);\r\n\r\n  const price = props.price || props.dollarMultiplier\r\n\r\n  if (price && dollarMode) {\r\n    displayBalance = \"$\" + (floatBalance * price).toFixed(2);\r\n  }\r\n\r\n  return (\r\n    <span\r\n      style={{\r\n        verticalAlign: \"middle\",\r\n        fontSize: props.size ? props.size : 24,\r\n        padding: 8,\r\n        cursor: \"pointer\",\r\n      }}\r\n      onClick={() => {\r\n        setDollarMode(!dollarMode);\r\n      }}\r\n    >\r\n      {displayBalance}\r\n    </span>\r\n  );\r\n}\r\n","import { hexlify } from \"@ethersproject/bytes\";\r\nimport { notification } from \"antd\";\r\nimport { BLOCKNATIVE_DAPPID, } from \"../constants\";\r\n\r\nimport Notify from \"bnc-notify\";\r\n\r\n// this should probably just be renamed to \"notifier\"\r\n// it is basically just a wrapper around BlockNative's wonderful Notify.js\r\n// https://docs.blocknative.com/notify\r\n\r\nexport default function Transactor(provider, gasPrice, etherscan) {\r\n  if (typeof provider !== \"undefined\") {\r\n    // eslint-disable-next-line consistent-return\r\n    return async tx => {\r\n\r\n      const signer = provider.getSigner();\r\n      const network = await provider.getNetwork();\r\n      const options = {\r\n        dappId: BLOCKNATIVE_DAPPID, // GET YOUR OWN KEY AT https://account.blocknative.com\r\n        system: \"ethereum\",\r\n        networkId: network.chainId,\r\n        //darkMode: true, // (default: false)\r\n        transactionHandler: txInformation => {\r\n          console.log(\"HANDLE TX\", txInformation);\r\n        },\r\n      };\r\n      const notify = Notify(options);\r\n\r\n      let etherscanNetwork = \"\";\r\n      if (network.name && network.chainId > 1) {\r\n        etherscanNetwork = network.name + \".\";\r\n      }\r\n\r\n      let etherscanTxUrl = \"https://\" + etherscanNetwork + \"etherscan.io/tx/\";\r\n      if (network.chainId === 100) {\r\n        etherscanTxUrl = \"https://blockscout.com/poa/xdai/tx/\";\r\n      }\r\n\r\n      try {\r\n        let result;\r\n        if (tx instanceof Promise) {\r\n          result = await tx;\r\n        } else {\r\n          if (!tx.gasPrice) {\r\n            tx.gasPrice = 0;\r\n          }\r\n          if (!tx.gasLimit) {\r\n            tx.gasLimit = hexlify(120000);\r\n          }\r\n          console.log(\"RUNNING TX\", tx);\r\n          result = await signer.sendTransaction(tx);\r\n        }\r\n        console.log(\"RESULT:\", result);\r\n        console.log(\"Notify\", notify);\r\n\r\n        // if it is a valid Notify.js network, use that, if not, just send a default notification\r\n        if ([1, 3, 4, 5, 42, 100].indexOf(network.chainId) >= 0) {\r\n          const { emitter } = notify.hash(result.hash);\r\n          emitter.on(\"all\", transaction => {\r\n            return {\r\n              onclick: () => window.open((etherscan || etherscanTxUrl) + transaction.hash),\r\n            };\r\n          });\r\n        } else {\r\n          notification.info({\r\n            message: \"Transaction Sent\",\r\n            description: result.hash,\r\n            placement: \"bottomRight\",\r\n          });\r\n        }\r\n\r\n        return result;\r\n      } catch (e) {\r\n        console.log(e);\r\n        console.log(\"Transaction Error:\", e.message);\r\n        notification.error({\r\n          message: \"Transaction Error\",\r\n          description: e.message,\r\n        });\r\n      }\r\n    };\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { WalletOutlined, QrcodeOutlined, SendOutlined, KeyOutlined } from \"@ant-design/icons\";\r\nimport { Tooltip, Spin, Modal, Button, Typography } from \"antd\";\r\nimport QR from \"qrcode.react\";\r\nimport { parseEther } from \"@ethersproject/units\";\r\nimport { useUserAddress } from \"eth-hooks\";\r\nimport { Transactor } from \"../helpers\";\r\nimport Address from \"./Address\";\r\nimport Balance from \"./Balance\";\r\nimport AddressInput from \"./AddressInput\";\r\nimport EtherInput from \"./EtherInput\";\r\nimport { ethers } from \"ethers\";\r\nconst { Text, Paragraph } = Typography;\r\n\r\n\r\nexport default function Wallet(props) {\r\n  const signerAddress = useUserAddress(props.provider);\r\n  const selectedAddress = props.address || signerAddress;\r\n\r\n  const [open, setOpen] = useState();\r\n  const [qr, setQr] = useState();\r\n  const [amount, setAmount] = useState();\r\n  const [toAddress, setToAddress] = useState();\r\n  const [pk, setPK] = useState()\r\n\r\n  const providerSend = props.provider ? (\r\n    <Tooltip title=\"Wallet\">\r\n      <WalletOutlined\r\n        onClick={() => {\r\n          setOpen(!open);\r\n        }}\r\n        rotate={-90}\r\n        style={{\r\n          padding: 7,\r\n          color: props.color ? props.color : \"\",\r\n          cursor: \"pointer\",\r\n          fontSize: 28,\r\n          verticalAlign: \"middle\",\r\n        }}\r\n      />\r\n    </Tooltip>\r\n  ) : (\r\n    \"\"\r\n  );\r\n\r\n  let display;\r\n  let receiveButton;\r\n  let privateKeyButton\r\n  if (qr) {\r\n    display = (\r\n      <div>\r\n        <div>\r\n          <Text copyable>{selectedAddress}</Text>\r\n        </div>\r\n        <QR\r\n          value={selectedAddress}\r\n          size=\"450\"\r\n          level=\"H\"\r\n          includeMargin\r\n          renderAs=\"svg\"\r\n          imageSettings={{ excavate: false }}\r\n        />\r\n      </div>\r\n    );\r\n    receiveButton = (\r\n      <Button\r\n        key=\"hide\"\r\n        onClick={() => {\r\n          setQr(\"\");\r\n        }}\r\n      >\r\n        <QrcodeOutlined /> Hide\r\n      </Button>\r\n    );\r\n    privateKeyButton = (\r\n     <Button key=\"hide\" onClick={()=>{setPK(selectedAddress);setQr(\"\")}}>\r\n       <KeyOutlined /> Private Key\r\n     </Button>\r\n   )\r\n }else if(pk){\r\n\r\n   let pk = localStorage.getItem(\"metaPrivateKey\")\r\n   let wallet = new ethers.Wallet(pk)\r\n\r\n   if(wallet.address!==selectedAddress){\r\n     display = (\r\n       <div>\r\n         <b>*injected account*, private key unknown</b>\r\n       </div>\r\n     )\r\n   }else{\r\n\r\n     let extraPkDisplayAdded = {}\r\n     let extraPkDisplay = []\r\n     extraPkDisplayAdded[wallet.address] = true\r\n     extraPkDisplay.push(\r\n       <div style={{fontSize:16,padding:2,backgroundStyle:\"#89e789\"}}>\r\n          <a href={\"/pk#\"+pk}>\r\n            <Address minimized={true} address={wallet.address} ensProvider={props.ensProvider} /> {wallet.address.substr(0,6)}\r\n          </a>\r\n       </div>\r\n     )\r\n     for (var key in localStorage){\r\n       if(key.indexOf(\"metaPrivateKey_backup\")>=0){\r\n         console.log(key)\r\n         let pastpk = localStorage.getItem(key)\r\n         let pastwallet = new ethers.Wallet(pastpk)\r\n         if(!extraPkDisplayAdded[pastwallet.address] /*&& selectedAddress!=pastwallet.address*/){\r\n           extraPkDisplayAdded[pastwallet.address] = true\r\n           extraPkDisplay.push(\r\n             <div style={{fontSize:16}}>\r\n                <a href={\"/pk#\"+pastpk}>\r\n                  <Address minimized={true} address={pastwallet.address} ensProvider={props.ensProvider} /> {pastwallet.address.substr(0,6)}\r\n                </a>\r\n             </div>\r\n           )\r\n         }\r\n       }\r\n     }\r\n\r\n\r\n     display = (\r\n       <div>\r\n         <b>Private Key:</b>\r\n\r\n         <div>\r\n          <Text copyable>{pk}</Text>\r\n          </div>\r\n\r\n          <hr/>\r\n\r\n         <i>Point your camera phone at qr code to open in\r\n           <a target=\"_blank\" href={\"https://xdai.io/\"+pk} rel=\"noopener noreferrer\">burner wallet</a>:\r\n         </i>\r\n         <QR value={\"https://xdai.io/\"+pk} size={\"450\"} level={\"H\"} includeMargin={true} renderAs={\"svg\"} imageSettings={{excavate:false}}/>\r\n\r\n         <Paragraph style={{fontSize:\"16\"}} copyable>{\"https://xdai.io/\"+pk}</Paragraph>\r\n\r\n         {extraPkDisplay?(\r\n           <div>\r\n             <h3>\r\n              Known Private Keys:\r\n             </h3>\r\n             {extraPkDisplay}\r\n             <Button onClick={()=>{\r\n               let currentPrivateKey = window.localStorage.getItem(\"metaPrivateKey\");\r\n               if(currentPrivateKey){\r\n                 window.localStorage.setItem(\"metaPrivateKey_backup\"+Date.now(),currentPrivateKey);\r\n               }\r\n               const randomWallet = ethers.Wallet.createRandom()\r\n               const privateKey = randomWallet._signingKey().privateKey\r\n               window.localStorage.setItem(\"metaPrivateKey\",privateKey);\r\n               window.location.reload()\r\n             }}>\r\n              Generate\r\n             </Button>\r\n           </div>\r\n         ):\"\"}\r\n\r\n       </div>\r\n     )\r\n   }\r\n\r\n   receiveButton = (\r\n     <Button key=\"receive\" onClick={()=>{setQr(selectedAddress);setPK(\"\")}}>\r\n       <QrcodeOutlined /> Receive\r\n     </Button>\r\n   )\r\n   privateKeyButton = (\r\n     <Button key=\"hide\" onClick={()=>{setPK(\"\");setQr(\"\")}}>\r\n       <KeyOutlined /> Hide\r\n     </Button>\r\n   )\r\n  } else {\r\n    const inputStyle = {\r\n      padding: 10,\r\n    };\r\n\r\n    display = (\r\n      <div>\r\n        <div style={inputStyle}>\r\n          <AddressInput\r\n            autoFocus\r\n            ensProvider={props.ensProvider}\r\n            placeholder=\"to address\"\r\n            address={toAddress}\r\n            onChange={setToAddress}\r\n          />\r\n        </div>\r\n        <div style={inputStyle}>\r\n          <EtherInput\r\n            price={props.price}\r\n            value={amount}\r\n            onChange={value => {\r\n              setAmount(value);\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n    receiveButton = (\r\n      <Button\r\n        key=\"receive\"\r\n        onClick={() => {\r\n          setQr(selectedAddress);\r\n          setPK(\"\");\r\n        }}\r\n      >\r\n        <QrcodeOutlined /> Receive\r\n      </Button>\r\n    );\r\n    privateKeyButton = (\r\n      <Button key=\"hide\" onClick={()=>{setPK(selectedAddress);setQr(\"\")}}>\r\n        <KeyOutlined /> Private Key\r\n      </Button>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <span>\r\n      {providerSend}\r\n      <Modal\r\n        visible={open}\r\n        title={\r\n          <div>\r\n            {selectedAddress ? <Address address={selectedAddress} ensProvider={props.ensProvider} /> : <Spin />}\r\n            <div style={{ float: \"right\", paddingRight: 25 }}>\r\n              <Balance address={selectedAddress} provider={props.provider} dollarMultiplier={props.price} />\r\n            </div>\r\n          </div>\r\n        }\r\n        onOk={() => {\r\n          setQr();\r\n          setPK();\r\n          setOpen(!open);\r\n        }}\r\n        onCancel={() => {\r\n          setQr();\r\n          setPK();\r\n          setOpen(!open);\r\n        }}\r\n        footer={[\r\n          privateKeyButton, receiveButton,\r\n          <Button\r\n            key=\"submit\"\r\n            type=\"primary\"\r\n            disabled={!amount || !toAddress || qr}\r\n            loading={false}\r\n            onClick={() => {\r\n              const tx = Transactor(props.provider);\r\n\r\n              let value;\r\n              try {\r\n                value = parseEther(\"\" + amount);\r\n              } catch (e) {\r\n                // failed to parseEther, try something else\r\n                value = parseEther(\"\" + parseFloat(amount).toFixed(8));\r\n              }\r\n\r\n              tx({\r\n                to: toAddress,\r\n                value,\r\n              });\r\n              setOpen(!open);\r\n              setQr();\r\n            }}\r\n          >\r\n            <SendOutlined /> Send\r\n          </Button>,\r\n        ]}\r\n      >\r\n        {display}\r\n      </Modal>\r\n    </span>\r\n  );\r\n}\r\n","import React, { useState, useCallback } from \"react\";\r\nimport { Input, Button, Tooltip } from \"antd\";\r\nimport Blockies from \"react-blockies\";\r\nimport { SendOutlined } from \"@ant-design/icons\";\r\nimport { parseEther } from \"@ethersproject/units\";\r\nimport { Transactor } from \"../helpers\";\r\nimport Wallet from \"./Wallet\";\r\nimport { useLookupAddress } from \"eth-hooks\";\r\n\r\n// improved a bit by converting address to ens if it exists\r\n// added option to directly input ens name\r\n// added placeholder option\r\n\r\n/*\r\n  ~ What it does? ~\r\n\r\n  Displays a local faucet to send ETH to given address, also wallet is provided\r\n\r\n  ~ How can I use? ~\r\n\r\n  <Faucet \r\n    price={price}\r\n    localProvider={localProvider}  \r\n    ensProvider={mainnetProvider}\r\n    placeholder={\"Send local faucet\"}\r\n  />\r\n\r\n  ~ Features ~\r\n\r\n  - Provide price={price} of ether and convert between USD and ETH in a wallet\r\n  - Provide localProvider={localProvider} to be able to send ETH to given address\r\n  - Provide ensProvider={mainnetProvider} and your address will be replaced by ENS name\r\n              (ex. \"0xa870\" => \"user.eth\") or you can enter directly ENS name instead of address\r\n              works both in input field & wallet\r\n  - Provide placeholder=\"Send local faucet\" value for the input\r\n*/\r\n\r\nexport default function Faucet(props) {\r\n  const [address, setAddress] = useState();\r\n\r\n  let blockie;\r\n  if (address && typeof address.toLowerCase === \"function\") {\r\n    blockie = <Blockies seed={address.toLowerCase()} size={8} scale={4} />;\r\n  } else {\r\n    blockie = <div />;\r\n  }\r\n\r\n  const ens = useLookupAddress(props.ensProvider, address);\r\n\r\n  const updateAddress = useCallback(\r\n    async newValue => {\r\n      if (typeof newValue !== \"undefined\") {\r\n        let address = newValue;\r\n        if (address.indexOf(\".eth\") > 0 || address.indexOf(\".xyz\") > 0) {\r\n          try {\r\n            const possibleAddress = await props.ensProvider.resolveName(address);\r\n            if (possibleAddress) {\r\n              address = possibleAddress;\r\n            }\r\n            // eslint-disable-next-line no-empty\r\n          } catch (e) {}\r\n        }\r\n        setAddress(address);\r\n      }\r\n    },\r\n    [props.ensProvider],\r\n  );\r\n\r\n  const tx = Transactor(props.localProvider);\r\n\r\n  return (\r\n    <span>\r\n      <Input\r\n        size=\"large\"\r\n        placeholder={props.placeholder ? props.placeholder : \"local faucet\"}\r\n        prefix={blockie}\r\n        //value={address}\r\n        value={ens || address}\r\n        onChange={e => {\r\n          //setAddress(e.target.value);\r\n          updateAddress(e.target.value);\r\n        }}\r\n        suffix={\r\n          <Tooltip title=\"Faucet: Send local ether to an address.\">\r\n            <Button\r\n              onClick={() => {\r\n                tx({\r\n                  to: address,\r\n                  value: parseEther(\"0.01\"),\r\n                });\r\n                setAddress(\"\");\r\n              }}\r\n              shape=\"circle\"\r\n              icon={<SendOutlined />}\r\n            />\r\n            <Wallet color=\"#888888\" provider={props.localProvider} ensProvider={props.ensProvider} price={props.price} />\r\n          </Tooltip>\r\n        }\r\n      />\r\n    </span>\r\n  );\r\n}\r\n","import React, {useMemo, useEffect} from \"react\";\r\nimport {useDropzone} from 'react-dropzone';\r\n\r\n\r\nconst baseStyle = {\r\n    flex: 1,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    padding: '20px',\r\n    borderWidth: 2,\r\n    borderRadius: 2,\r\n    borderColor: '#eeeeee',\r\n    borderStyle: 'dashed',\r\n    backgroundColor: '#fafafa',\r\n    color: '#bdbdbd',\r\n    outline: 'none',\r\n    transition: 'border .24s ease-in-out'\r\n  };\r\n  \r\n  const focusedStyle = {\r\n    borderColor: '#fcd15a'\r\n  };\r\n  \r\n  const acceptStyle = {\r\n    borderColor: '#fcd15a'\r\n  };\r\n  \r\n  const rejectStyle = {\r\n    borderColor: '#ff1744'\r\n  };\r\n\r\nexport default function DragandDrop(props){\r\n    \r\n    const {\r\n        acceptedFiles,\r\n        getRootProps,\r\n        getInputProps,\r\n        isFocused,\r\n        isDragAccept,\r\n        isDragReject\r\n      } = useDropzone();\r\n    const files = acceptedFiles.map(file => (\r\n      <li key={file.path}>\r\n        {file.path} - {file.size} bytes\r\n      </li>\r\n    ));\r\n    useEffect(() => {\r\n    if(acceptedFiles){\r\n        props.parentCallback(acceptedFiles);\r\n      }\r\n      }, [acceptedFiles]);\r\n      \r\n  \r\n    \r\n      const style = useMemo(() => ({\r\n        ...baseStyle,\r\n        ...(isFocused ? focusedStyle : {}),\r\n        ...(isDragAccept ? acceptStyle : {}),\r\n        ...(isDragReject ? rejectStyle : {})\r\n      }), [\r\n        isFocused,\r\n        isDragAccept,\r\n        isDragReject\r\n      ]);\r\n    \r\n  \r\n    return (\r\n      <section className=\"container\">\r\n        <div className=\"container\">\r\n      <div {...getRootProps({style})}>\r\n        <input {...getInputProps()} />\r\n        <p>Drag 'n' drop your dataset file here, or click to select a file</p>\r\n      </div>\r\n    </div>\r\n        <aside>\r\n          <h4>File</h4>\r\n          <ul>{files}</ul>\r\n        </aside>\r\n        \r\n      </section>\r\n\r\n    );\r\n  }","import React, { useState, useRef } from \"react\";\r\nimport Button from \"ui-kit/components/Button\";\r\nimport InputText from \"ui-kit/components/InputText\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport DragandDrop from \"../components/DragandDrop\";\r\nimport CircularProgress from \"ui-kit/components/CircularProgress\";\r\nimport { add } from \"../services/ipfs-service\";\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    width: \"70%\",\r\n    paddingTop: \"50px\",\r\n    paddingLeft: \"20px\",\r\n    flexDirection: \"column\",\r\n    flex: 1,\r\n  },\r\n  input: {\r\n    paddingTop: \"25px\",\r\n    width: 600,\r\n    maxWidth: 800,\r\n  },\r\n  divider: {\r\n    marginTop: \"20px\",\r\n    marginLeft: \"0px\",\r\n    height: \"200px\",\r\n  },\r\n  dividerlast: {\r\n    marginTop: \"20px\",\r\n    marginLeft: \"0px\",\r\n    height: \"300px\",\r\n  },\r\n  dividertee: {\r\n    height: \"40px\",\r\n  },\r\n  deploydataset: {\r\n    paddingTop: \"400px\",\r\n  },\r\n  pushtEncryptionkeytosms: {\r\n    paddingTop: \"200px\",\r\n  },\r\n  publishteedatasetorder: {\r\n    paddingTop: \"200px\",\r\n  },\r\n  orderbook: {\r\n    paddingTop: \"200px\",\r\n  },\r\n});\r\n\r\nexport default function Home({ address, readProvider, writeProvider, contracts, tx, iexec }) {\r\n  const [Key, setKey] = useState(\"\");\r\n  const [Files, setFiles] = useState([]);\r\n\r\n  const [encryptionKeyValue, setEncryptionValue] = useState(\"\");\r\n  const handleEncryptionkeyChange = e => setEncryptionValue(e.target.value);\r\n  const [datasetNameValue, setDatasetNameValue] = useState(\"\");\r\n  const handleDatasetNameChange = e => setDatasetNameValue(e.target.value);\r\n  const [dataseturlipfsValue, setDataseturlipfsValue] = useState(\"\");\r\n  const handleDataseturlipfsChange = e => setDataseturlipfsValue(e.target.value);\r\n  const [datasetChecksumValue, setDatasetChecksumValue] = useState(\"\");\r\n  const handleDatasetChecksumChange = e => setDatasetChecksumValue(e.target.value);\r\n  const [datasetEncryptionKeyValue, setDatasetEncryptionKeyValue] = useState(\"\");\r\n  const handleDatasetEncryptionKeyChange = e => setDatasetEncryptionKeyValue(e.target.value);\r\n  const [datasetAddressValue, setDatasetAddressValue] = useState(\"\");\r\n  const handleDatasetAddressChange = e => setDatasetAddressValue(e.target.value);\r\n  const [datasetVolumeValue, setDatasetVolumeValue] = useState(\"\");\r\n  const handleDatasetVolumeChange = e => setDatasetVolumeValue(e.target.value);\r\n  const [datasetAppRestrictValue, setDatasetAppRestrictValue] = useState(\"0x0000000000000000000000000000000000000000\");\r\n  const handleDatasetAppRestrictChange = e => setDatasetAppRestrictValue(e.target.value);\r\n  const [datasetRequesterRestrictValue, setDatasetRequesterRestrictValue] = useState(\r\n    \"0x0000000000000000000000000000000000000000\",\r\n  );\r\n  const handleDatasetRequesterRestrictChange = e => setDatasetRequesterRestrictValue(e.target.value);\r\n  const [datasetOrderHashValue, setDatasetOrderHashValue] = useState(\"\");\r\n  const handleDatasetOrderHashChange = e => setDatasetOrderHashValue(e.target.value);\r\n  const [TaskidValue, setTaskidValue] = useState(\"\");\r\n  const handleTaskidChange = e => setTaskidValue(e.target.value);\r\n\r\n  const [statusEncryptandUpload, setstatusEncryptandUpload] = useState([]);\r\n  const [statusencryptuploadbutton, setstatusencryptuploadbutton] = useState(false);\r\n  const [statusDeploytext, setdeploytext] = useState(\"\");\r\n  const [statussecrettext, setsecrettext] = useState(\"\");\r\n  const [statusDeploy, setstatusDeploy] = useState(false);\r\n  const [runapplaoding, setrunapplaoding] = useState(false);\r\n\r\n  const [disablestoragebutton, setdisablestoragebutton] = useState(false);\r\n  const [storagetext, setstoragetext] = useState(\"\");\r\n  const [appstatusdeal, setappstatusdeal] = useState([]);\r\n  const [appstatus, setappstatus] = useState(\"\");\r\n\r\n  const deploydatasetref = useRef(null);\r\n  const pushtosmsref = useRef(null);\r\n  const teeref = useRef(null);\r\n\r\n  const handleCallback = FilesData => {\r\n    setFiles(FilesData);\r\n  };\r\n  const delay = ms => new Promise(res => setTimeout(res, ms));\r\n\r\n  const generateDatasetKey = async () => {\r\n    try {\r\n      const key = iexec.dataset.generateEncryptionKey();\r\n      setKey(key);\r\n      setEncryptionValue(key);\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n     \r\n    }\r\n  };\r\n\r\n  const encryptDataset = async () => {\r\n    try {\r\n      setstatusencryptuploadbutton(true);\r\n      \r\n      const file = Files[0];\r\n      if (!file) {\r\n        throw Error(\"No file selected\");\r\n      }\r\n\r\n      setstatusEncryptandUpload([<p>Reading File {file.name} </p>]);\r\n      console.log(`Reading ${file.name}`);\r\n      const fileBytes = await new Promise((resolve, reject) => {\r\n        const fileReader = new FileReader();\r\n        fileReader.readAsArrayBuffer(file);\r\n        fileReader.onload = e => resolve(e.target.result);\r\n        fileReader.onerror = () => reject(Error(`Failed to read file: ${fileReader.error}`));\r\n        fileReader.onabort = () => reject(Error(`Failed to read file: aborted`));\r\n      });\r\n\r\n      setstatusEncryptandUpload(oldArray => [...oldArray, <p>Encrypting {file.name} </p>]);\r\n\r\n      const encrypted = await iexec.dataset.encrypt(fileBytes, Key);\r\n\r\n      const checksum = await iexec.dataset.computeEncryptedFileChecksum(encrypted);\r\n\r\n      setstatusEncryptandUpload(oldArray => [...oldArray, <p>Uploading encrypted file to IPFS </p>]);\r\n\r\n      const cid = await add(encrypted);\r\n\r\n      const multiaddr = `/ipfs/${cid.toString()}`;\r\n      const publicUrl = `https://ipfs.io${multiaddr}`;\r\n\r\n      setDatasetNameValue(file.name);\r\n      setDataseturlipfsValue(multiaddr);\r\n      setDatasetChecksumValue(checksum);\r\n\r\n      setstatusEncryptandUpload(oldArray => [\r\n        ...oldArray,\r\n        <p>\r\n          Checking file on IPFS on <a href={publicUrl}>{publicUrl}</a>{\" \"}\r\n        </p>,\r\n      ]);\r\n\r\n      await fetch(publicUrl).then(res => {\r\n        if (!res.ok) {\r\n          throw Error(`Failed to load uploaded file at ${publicUrl}`);\r\n        }\r\n      });\r\n      setstatusencryptuploadbutton(false);\r\n      setstatusEncryptandUpload(oldArray => [\r\n        ...oldArray,\r\n        <p>File encrypted and uploded to IPFS (checksum {checksum}) </p>,\r\n      ]);\r\n      await delay(4000);\r\n\r\n      deploydatasetref.current.scrollIntoView({ block: \"end\", behavior: \"smooth\" });\r\n    } catch (error) {\r\n      console.log(error);\r\n      \r\n    } finally {\r\n      \r\n    }\r\n  };\r\n\r\n  const deploydataset = async () => {\r\n    try {\r\n      setstatusDeploy(true);\r\n      const owner = await iexec.wallet.getAddress();\r\n      const name = datasetNameValue;\r\n      const multiaddr = dataseturlipfsValue;\r\n      const checksum = datasetChecksumValue;\r\n      const { address } = await iexec.dataset.deployDataset({\r\n        owner,\r\n        name,\r\n        multiaddr,\r\n        checksum,\r\n      });\r\n\r\n      setstatusDeploy(false);\r\n      setdeploytext(`Dataset deployed at address ${address}`);\r\n\r\n      setDatasetEncryptionKeyValue(encryptionKeyValue);\r\n      setDatasetAddressValue(address);\r\n\r\n      await delay(4000);\r\n      pushtosmsref.current.scrollIntoView({ block: \"end\", behavior: \"smooth\" });\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n    }\r\n  };\r\n  const pushsecret = async () => {\r\n    try {\r\n      await iexec.dataset.pushDatasetSecret(datasetAddressValue, datasetEncryptionKeyValue);\r\n\r\n      setsecrettext(`Encryption key pushed for datastet ${datasetAddressValue}`);\r\n      await delay(4000);\r\n      teeref.current.scrollIntoView({ block: \"end\", behavior: \"smooth\" });\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      \r\n    }\r\n  };\r\n\r\n  const publishOrder = async () => {\r\n    try {\r\n      const dataset = datasetAddressValue;\r\n      const datasetprice = 0;\r\n      const volume = datasetVolumeValue;\r\n      const apprestrict = datasetAppRestrictValue;\r\n      const requesterrestrict = datasetRequesterRestrictValue;\r\n      const tag = [\"tee\"];\r\n      const signedOrder = await iexec.order.signDatasetorder(\r\n        await iexec.order.createDatasetorder({\r\n          dataset,\r\n          datasetprice,\r\n          volume,\r\n          apprestrict,\r\n          requesterrestrict,\r\n          tag,\r\n        }),\r\n      );\r\n      const orderHash = await iexec.order.publishDatasetorder(signedOrder);\r\n      console.log(`Order published with hash ${orderHash}`);\r\n      setDatasetOrderHashValue(orderHash);\r\n      alert(`Order published with hash ${orderHash}`);\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n    }\r\n  };\r\n  const cancelOrder = async () => {\r\n    try {\r\n      const { order } = await iexec.orderbook.fetchDatasetorder(datasetOrderHashValue);\r\n      const { txHash } = await iexec.order.cancelDatasetorder(order);\r\n      alert(`Order canceled (tx:${txHash})`);\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n    }\r\n  };\r\n  const checkStorage = async () => {\r\n    try {\r\n      const isStorageInitialized = await iexec.storage.checkStorageTokenExists(await iexec.wallet.getAddress());\r\n      if (isStorageInitialized) setstoragetext(\"initialized\");\r\n      else setstoragetext(\"not initialized\");\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const initStorage = async () => {\r\n    try {\r\n      const storageToken = await iexec.storage.defaultStorageLogin();\r\n      await iexec.storage.pushStorageToken(storageToken, { forceUpdate: true });\r\n      checkStorage();\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      setdisablestoragebutton(true);\r\n    }\r\n  };\r\n  const appRun = async () => {\r\n    try {\r\n      setrunapplaoding(true);\r\n      const appAddress = \"0xdeC82933E48E5A0ac4BC0e0ffE9d994f027e01F4\";\r\n      const datasetAddress = datasetAddressValue;\r\n      const userAddress = await iexec.wallet.getAddress();\r\n\r\n      const { orders: appOrders } = await iexec.orderbook.fetchAppOrderbook(appAddress, {\r\n        minTag: [\"tee\"],\r\n      });\r\n      const appOrder = appOrders && appOrders[0] && appOrders[0].order;\r\n      if (!appOrder) throw Error(`no apporder found for app ${appAddress}`);\r\n      const datasetOrders = await iexec.orderbook.fetchDatasetOrderbook(datasetAddress, {\r\n        requester: userAddress,\r\n      });\r\n\r\n      const datasetOrder = datasetOrders.orders[0].order;\r\n\r\n      const workerpoolOrders = await iexec.orderbook.fetchWorkerpoolOrderbook({\r\n        workerpool: \"0x86F2102532d9d01DA8084c96c1D1Bdb90e12Bf07\",\r\n        app: appAddress,\r\n        requester: userAddress,\r\n        minTag: [\"tee\"],\r\n      });\r\n      console.log(workerpoolOrders.orders[0].order);\r\n      const workerpoolOrder = workerpoolOrders.orders[0].order;\r\n\r\n      const requestOrderToSign = await iexec.order.createRequestorder({\r\n        app: appAddress,\r\n        appmaxprice: appOrder.appprice,\r\n        dataset: datasetAddress,\r\n        datasetmaxprice: datasetOrder.datasetprice,\r\n        workerpoolmaxprice: workerpoolOrder.workerpoolprice,\r\n        requester: userAddress,\r\n        volume: 1,\r\n        params: \"\",\r\n        tag: [\"tee\"],\r\n        category: workerpoolOrder.category,\r\n      });\r\n\r\n      const requestOrder = await iexec.order.signRequestorder(requestOrderToSign);\r\n      console.log(datasetOrder);\r\n      const { dealid } = await iexec.order.matchOrders({\r\n        apporder: appOrder,\r\n        datasetorder: datasetOrder,\r\n        requestorder: requestOrder,\r\n        workerpoolorder: workerpoolOrder,\r\n      });\r\n\r\n      const dealUrl = `https://explorer.iex.ec/viviani/deal/${dealid}`;\r\n      const deal = await iexec.deal.show(dealid);\r\n      setTaskidValue(deal.tasks[\"0\"]);\r\n      setappstatusdeal([\r\n        <p>\r\n          submitted deal check deal Url on <a href={dealUrl}>{dealUrl}</a>{\" \"}\r\n        </p>,\r\n      ]);\r\n      setappstatus(\"Task Running!\");\r\n      setrunapplaoding(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n    }\r\n  };\r\n\r\n  const dowloadResults = async () => {\r\n    try {\r\n      const res = await iexec.task.fetchResults(TaskidValue);\r\n      const file = await res.blob();\r\n      const fileName = `${TaskidValue}.zip`;\r\n      if (window.navigator.msSaveOrOpenBlob) window.navigator.msSaveOrOpenBlob(file, fileName);\r\n    } catch (error) {\r\n      console.log(error);\r\n      alert(error);\r\n    } finally {\r\n    }\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <div className=\"prepareencryptionkey\">\r\n        <h2>Prepare Confidential NFT</h2>\r\n        <Button onClick={generateDatasetKey}>Generate Encryption Key</Button>\r\n        <InputText\r\n          className={classes.input}\r\n          label=\"Encryption key\"\r\n          value={encryptionKeyValue}\r\n          onChange={handleEncryptionkeyChange}\r\n          placeholder=\"base64 encoded aes 256 key\"\r\n        />\r\n        <DragandDrop parentCallback={handleCallback}></DragandDrop>\r\n        {statusencryptuploadbutton ? (\r\n          <CircularProgress />\r\n        ) : (\r\n          <Button onClick={encryptDataset}>Encrypt and Upload File</Button>\r\n        )}\r\n        <div>\r\n          {statusEncryptandUpload.map((status, index) => {\r\n            return <div key={index}>{status}</div>;\r\n          })}\r\n        </div>\r\n      </div>\r\n\r\n      <div className={classes.deploydataset}>\r\n        <h2>Deploy Confidential NFT</h2>\r\n        <InputText\r\n          className={classes.input}\r\n          label=\"NFT Name\"\r\n          value={datasetNameValue}\r\n          onChange={handleDatasetNameChange}\r\n          placeholder=\"Dataset name\"\r\n        />\r\n        <InputText\r\n          className={classes.input}\r\n          label=\"File url/ipfs\"\r\n          value={dataseturlipfsValue}\r\n          onChange={handleDataseturlipfsChange}\r\n          placeholder=\"Dataset Name\"\r\n        />\r\n        <InputText\r\n          className={classes.input}\r\n          label=\"File checksum\"\r\n          value={datasetChecksumValue}\r\n          onChange={handleDatasetChecksumChange}\r\n          placeholder=\"encrypted file sha256sum\"\r\n        />\r\n        {statusDeploy ? <CircularProgress /> : <Button onClick={deploydataset}>Deploy DataSet</Button>}\r\n        <p>{statusDeploytext}</p>\r\n      </div>\r\n      <div className={classes.divider} id={\"deploydataset\"} ref={deploydatasetref}></div>\r\n      <div className={classes.pushtEncryptionkeytosms}>\r\n        <h2>Deploy Encryption Key</h2>\r\n        <InputText\r\n          className={classes.input}\r\n          label=\"Encryption Key\"\r\n          value={datasetEncryptionKeyValue}\r\n          onChange={handleDatasetEncryptionKeyChange}\r\n          placeholder=\"Dataset Key\"\r\n        />\r\n        <InputText\r\n          className={classes.input}\r\n          label=\"Dataset address\"\r\n          value={datasetAddressValue}\r\n          onChange={handleDatasetAddressChange}\r\n          placeholder=\"Dataset address\"\r\n        />\r\n\r\n        <Button onClick={pushsecret}>Push Encryption Key</Button>\r\n        <p>{statussecrettext}</p>\r\n      </div>\r\n      <div className={classes.divider} ref={pushtosmsref}></div>\r\n      <div className={classes.publishteedatasetorder}>\r\n        <h2>Grant Usage of your Confidential NFT</h2>\r\n        <InputText\r\n          className={classes.input}\r\n          label=\"Dataset address\"\r\n          value={datasetAddressValue}\r\n          onChange={handleDatasetAddressChange}\r\n          placeholder=\"Dataset address\"\r\n        />\r\n        <InputText\r\n          className={classes.input}\r\n          label=\"#Access\"\r\n          value={datasetVolumeValue}\r\n          onChange={handleDatasetVolumeChange}\r\n          placeholder=\"1\"\r\n        />\r\n        <InputText\r\n          className={classes.input}\r\n          label=\"Restrict to app\"\r\n          value={datasetAppRestrictValue}\r\n          onChange={handleDatasetAppRestrictChange}\r\n          placeholder=\"0x0000000000000000000000000000000000000000\"\r\n        />\r\n        <InputText\r\n          className={classes.input}\r\n          label=\"Restrict to user\"\r\n          value={datasetRequesterRestrictValue}\r\n          onChange={handleDatasetRequesterRestrictChange}\r\n          placeholder=\"0x0000000000000000000000000000000000000000\"\r\n        />\r\n\r\n        <Button onClick={publishOrder}>Authorize</Button>\r\n        <InputText\r\n          className={classes.input}\r\n          label=\"Order hash\"\r\n          value={datasetOrderHashValue}\r\n          onChange={handleDatasetOrderHashChange}\r\n          placeholder=\"Order hash\"\r\n        />\r\n        <Button onClick={cancelOrder}>Cancel Authorization</Button>\r\n      </div>\r\n      <div className={classes.dividertee} ref={teeref}></div>\r\n      <div className={classes.orderbook}>\r\n        <h2>Run in demo app</h2>\r\n        <Button onClick={initStorage} disabled={disablestoragebutton}>\r\n          Init Storage\r\n        </Button>\r\n        <p>{storagetext}</p>\r\n        <InputText\r\n          className={classes.input}\r\n          label=\"Dataset address\"\r\n          value={datasetAddressValue}\r\n          onChange={handleDatasetAddressChange}\r\n          placeholder=\"Dataset address\"\r\n        />\r\n        {runapplaoding ? <CircularProgress /> : <Button onClick={appRun}>Run App</Button>}\r\n\r\n        <div>{appstatusdeal[0]}</div>\r\n        <div>{appstatus}</div>\r\n        <InputText\r\n          className={classes.input}\r\n          label=\"Task id\"\r\n          value={TaskidValue}\r\n          onChange={handleTaskidChange}\r\n          placeholder=\"Task id\"\r\n        />\r\n        <Button onClick={dowloadResults}>Download Task Result</Button>\r\n      </div>\r\n      <div className={classes.dividerlast}></div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { BrowserRouter, Switch, Route, Link } from \"react-router-dom\";\r\nimport { Web3Provider } from \"@ethersproject/providers\";\r\nimport \"./App.css\";\r\nimport { Row, Col, Button, Menu, Alert } from \"antd\";\r\nimport Web3Modal from \"web3modal\";\r\nimport { IExec } from 'iexec';\r\nimport { useUserAddress } from \"eth-hooks\";\r\nimport {Account, Faucet } from \"./components\";\r\nimport { Home } from \"./views\";\r\nimport {NETWORK, NETWORKS } from \"./constants\";\r\n\r\n\r\n/// 📡 What chain are your contracts deployed to?\r\nconst targetNetwork = NETWORKS[\"iExecSidechain\"];\r\n\r\n// 🔭 block explorer URL\r\nconst blockExplorer = targetNetwork.blockExplorer;\r\n\r\n\r\nfunction App(props) {\r\n\r\n  // injected provider for writing\r\n  const [provider, setWriteProvider] = useState();\r\n  const [iexec, setiexec] = useState();\r\n  // infura provider pointed at target network for reading\r\n  // wait, can we use infura for mumbai or we need to get our own rpc\r\n  // yes.. we have to use RPC provider. project is already configured for multiple networks\r\n  // including mumbai.\r\n  // const readProvider = new JsonRpcProvider(targetNetwork.rpcUrl);\r\n\r\n\r\n  /* 🔥 This hook will get the price of Gas from ⛽️ EtherGasStation */\r\n  \r\n\r\n  const address = useUserAddress(provider);\r\n\r\n  // You can warn the user if you would like them to be on a specific network\r\n  let selectedChainId = provider?._network?.chainId;\r\n  let localChainId = targetNetwork?.chainId;\r\n\r\n\r\n\r\n\r\n \r\n\r\n  let networkDisplay = \"\";\r\n  if (targetNetwork?.chainId && selectedChainId && targetNetwork.chainId !== selectedChainId) {\r\n    networkDisplay = (\r\n      <div style={{ zIndex: 2, position: \"absolute\", right: 0, top: 60, padding: 16 }}>\r\n        <Alert\r\n          message={\"⚠️ Wrong Network\"}\r\n          description={\r\n            <div>\r\n              You have{\" \"}\r\n              <b>\r\n                {NETWORK(selectedChainId)?.name}({selectedChainId})\r\n              </b>{\" \"}\r\n              selected and you need to be on{\" \"}\r\n              <b>\r\n                {NETWORK(targetNetwork?.chainId)?.name} ({localChainId})\r\n              </b>\r\n              .\r\n            </div>\r\n          }\r\n          type=\"error\"\r\n          closable={false}\r\n        />\r\n      </div>\r\n    );\r\n  } else {\r\n    networkDisplay = (\r\n      <div style={{ zIndex: -1, position: \"absolute\", right: 154, top: 28, padding: 16, color: targetNetwork.color }}>\r\n        {targetNetwork.name}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const loadWeb3Modal = useCallback(async () => {\r\n    \r\n    \r\n    let ethProvider;\r\n  if (!window.ethereum)\r\n    // check existing web3 provider\r\n    throw Error('Need to install MetaMask');\r\n  ethProvider = window.ethereum;\r\n  ethProvider.on(\"chainChanged\", (_chainId) => window.location.reload());\r\n      ethProvider.on(\"accountsChanged\", (_accounts) =>\r\n        window.location.reload()\r\n      );\r\n      await window.ethereum.request({\r\n        method: \"eth_requestAccounts\"\r\n      });\r\n      window.ethereum.request({\r\n        method: \"wallet_addEthereumChain\",\r\n        params: [\r\n          {\r\n            chainId: \"0x85\",\r\n            chainName: \"iExec Test Sidechain\",\r\n            nativeCurrency: {\r\n              name: \"xRLC\",\r\n              symbol: \"xRLC\",\r\n              decimals: 18\r\n            },\r\n            rpcUrls: [\"https://viviani.iex.ec\"],\r\n            blockExplorerUrls: [\"https://blockscout-viviani.iex.ec\"]\r\n          }\r\n        ]\r\n      });\r\n  try {\r\n    await window.ethereum.request({ method: 'eth_requestAccounts' }); // prompt the use to grant the dapp access to the blockchain\r\n  } catch (error) {\r\n    throw Error('User denied access', error);\r\n  }\r\n  const web3provider = new Web3Provider(ethProvider);\r\n    // Wrapper for transforming a web3 provider (like metamask)\r\n    setWriteProvider(web3provider);\r\n    setiexec(new IExec(\r\n      {\r\n        ethProvider: ethProvider, // an eth signer provider like MetaMask connected to https://bellecour.iex.ec\r\n      },\r\n      {\r\n        isNative: true, // iExec sidechain use RLC as native token\r\n      },\r\n    ));\r\n  }, [setWriteProvider]);\r\n\r\n  useEffect(() => {\r\n    if (web3Modal.cachedProvider) {\r\n      loadWeb3Modal();\r\n    }\r\n  }, [loadWeb3Modal]);\r\n\r\n  const [route, setRoute] = useState();\r\n  useEffect(() => {\r\n    setRoute(window.location.pathname);\r\n  }, [setRoute]);\r\n\r\n  let faucetHint = \"\";\r\n  const faucetAvailable = provider && provider.connection && targetNetwork.name === \"localhost\";\r\n\r\n  const [faucetClicked, setFaucetClicked] = useState(false);\r\n  if (\r\n    !faucetClicked &&\r\n    provider &&\r\n    provider._network &&\r\n    provider._network.chainId === 31337\r\n  ) {\r\n    faucetHint = (\r\n      <div style={{ padding: 16 }}>\r\n        <Button\r\n          type={\"primary\"}\r\n          onClick={() => {\r\n            setFaucetClicked(true);\r\n          }}\r\n        >\r\n          <span role=\"img\" aria-label=\"funds\">💰</span> Grab funds from the faucet <span role=\"img\" aria-label=\"gas\">⛽️</span>\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      \r\n      \r\n      {networkDisplay}\r\n      <BrowserRouter>\r\n        <Menu style={{ textAlign: \"center\" }} selectedKeys={[route]} mode=\"horizontal\">\r\n          <Menu.Item key=\"/confidential-nft-poc\">\r\n            <Link\r\n              onClick={() => {\r\n                setRoute(\"/confidential-nft-poc\");\r\n              }}\r\n              to=\"/confidential-nft-poc\"\r\n            >\r\n              \r\n            </Link>\r\n          </Menu.Item>\r\n          \r\n          \r\n        </Menu>\r\n\r\n        <Switch>\r\n          <Route exact path=\"/confidential-nft-poc/NFTbuilder\">\r\n          {address?\r\n              <Home address={address} writeProvider={provider} iexec={iexec}/>\r\n              : <div style={{paddingTop: \"130px\"}}>Connect your wallet to use the Dapp!</div>\r\n            }\r\n          </Route>\r\n          \r\n        </Switch>\r\n      </BrowserRouter>\r\n\r\n      {/* 👨‍💼 Your account is in the top right with a wallet at connect options */}\r\n      <div style={{ position: \"fixed\", textAlign: \"right\", left: 0,right: 0, top: 0,}}>\r\n        <Account\r\n          address={address}\r\n          provider={provider}\r\n          web3Modal={web3Modal}\r\n          loadWeb3Modal={loadWeb3Modal}\r\n          logoutOfWeb3Modal={logoutOfWeb3Modal}\r\n          blockExplorer={blockExplorer}\r\n        />\r\n        {faucetHint}\r\n      </div>\r\n\r\n      {/* 🗺 Extra UI like gas price, eth price, faucet, and support: */}\r\n      <div style={{ position: \"fixed\", textAlign: \"left\", left: 0, bottom: 20, padding: 10 }}>\r\n        <Row align=\"middle\" gutter={[4, 4]}>\r\n          <Col span={24}>\r\n            {\r\n              /*  if the local provider has a signer, let's show the faucet:  */\r\n              faucetAvailable ? (\r\n                <Faucet\r\n                  localProvider={provider}\r\n                  // price={price}\r\n                  // ensProvider={provider}\r\n                />\r\n              ) : (\r\n                \"\"\r\n              )\r\n            }\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\n/*\r\n  Web3 modal helps us \"connect\" external wallets:\r\n*/\r\nconst web3Modal = new Web3Modal({\r\n  // network: \"mainnet\", // optional\r\n  cacheProvider: true, // optional\r\n  providerOptions: {\r\n    \r\n  },\r\n});\r\n\r\nconst logoutOfWeb3Modal = async () => {\r\n  await web3Modal.clearCachedProvider();\r\n  setTimeout(() => {\r\n    window.location.reload();\r\n  }, 1);\r\n};\r\n\r\nwindow.ethereum &&\r\n  window.ethereum.on(\"chainChanged\", chainId => {\r\n    setTimeout(() => {\r\n      window.location.reload();\r\n    }, 1);\r\n  });\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\n\r\nimport App from \"./App\";\r\n\r\n\r\nimport ThemeProvider from \"ui-kit/components/ThemeProvider\";\r\n\r\n\r\n\r\n\r\nReactDOM.render(\r\n  \r\n  <ThemeProvider>\r\n      <App/>\r\n  </ThemeProvider>\r\n  ,\r\n  document.getElementById(\"root\"),\r\n);\r\n","import Ipfs from \"ipfs\";\r\n\r\nconst DEFAULT_IPFS_GATEWAY = \"https://ipfs.io\";\r\n\r\nexport const get = async (cid, { ipfsGateway = DEFAULT_IPFS_GATEWAY } = {}) => {\r\n  const multiaddr = `/ipfs/${cid.toString()}`;\r\n  const publicUrl = `${ipfsGateway}${multiaddr}`;\r\n  const res = await fetch(publicUrl);\r\n  if (!res.ok) {\r\n    throw Error(`Failed to load content from ${publicUrl}`);\r\n  }\r\n  const arrayBuffer = await res.arrayBuffer();\r\n  return Buffer.from(arrayBuffer);\r\n};\r\n\r\nexport const add = async (content, { ipfsGateway = DEFAULT_IPFS_GATEWAY } = {}) => {\r\n  const ipfs = await Ipfs.create();\r\n  try {\r\n    const { cid } = await ipfs.add(content);\r\n    await ipfs.pin.add(cid, { timeout: 10000 }).catch(e => console.log(\"Ipfs add pin failed\", e));\r\n    await get(cid.toString(), { ipfsGateway });\r\n    await ipfs.stop();\r\n    return cid.toString();\r\n  } catch (e) {\r\n    if (typeof ipfs.stop === \"function\") {\r\n      await ipfs.stop();\r\n    }\r\n    throw e;\r\n  }\r\n};\r\n"],"sourceRoot":""}